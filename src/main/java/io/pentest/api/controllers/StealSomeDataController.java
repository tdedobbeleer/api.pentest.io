package io.pentest.api.controllers;

import com.google.common.util.concurrent.RateLimiter;
import io.pentest.api.model.SimpleStoredObject;
import io.pentest.api.repositories.SimpleStoredObjectRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@RequestMapping(value = "/api")
public class StealSomeDataController {
    private final SimpleStoredObjectRepository repository;
    private final RateLimiter rateLimiter = RateLimiter.create(1);

    @Autowired
    public StealSomeDataController(SimpleStoredObjectRepository repository) {
        this.repository = repository;
    }

    @GetMapping(value = "/steal")
    public ResponseEntity<SimpleStoredObject> steal(@RequestParam String data) {
        rateLimiter.acquire(1);
        return ResponseEntity.ok(repository.save(new SimpleStoredObject(data)));
    }

    @GetMapping(value = "/latest")
    public ResponseEntity<Page<SimpleStoredObject>> get() {
        rateLimiter.acquire(1);
        return ResponseEntity.ok(repository.findAll(PageRequest.of(0, 100)));
    }
}
